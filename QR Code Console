using System;
using System.Drawing;
using System.Drawing.Printing;
using System.IO;
using System.Windows.Forms;
using QRCoder;

public class QRCodeForm : Form
{
    private TextBox batchNumberTextBox;
    private TextBox productDescriptionTextBox;
    private TextBox gradeTextBox;
    private TextBox widthTextBox;
    private TextBox lengthTextBox;
    private Button generateQRCodeButton;
    private Button printQRCodeButton;
    private PictureBox qrCodePictureBox;

    public QRCodeForm()
    {
        this.Size = new Size(400, 400);
        this.Text = "QR Code Generator";

        batchNumberTextBox = new TextBox
        {
            Location = new Point(10, 10),
            Size = new Size(200, 20)
        };
        this.Controls.Add(batchNumberTextBox);

        productDescriptionTextBox = new TextBox
        {
            Location = new Point(10, 40),
            Size = new Size(200, 20)
        };
        this.Controls.Add(productDescriptionTextBox);

        gradeTextBox = new TextBox
        {
            Location = new Point(10, 70),
            Size = new Size(200, 20)
        };
        this.Controls.Add(gradeTextBox);

        widthTextBox = new TextBox
        {
            Location = new Point(10, 100),
            Size = new Size(200, 20)
        };
        this.Controls.Add(widthTextBox);

        lengthTextBox = new TextBox
        {
            Location = new Point(10, 130),
            Size = new Size(200, 20)
        };
        this.Controls.Add(lengthTextBox);

        generateQRCodeButton = new Button
        {
            Location = new Point(10, 160),
            Size = new Size(100, 20),
            Text = "Generate QR Code"
        };
        generateQRCodeButton.Click += GenerateQRCodeButton_Click;
        this.Controls.Add(generateQRCodeButton);

        printQRCodeButton = new Button
        {
            Location = new Point(120, 160),
            Size = new Size(100, 20),
            Text = "Print QR Code",
            Enabled = false
        };
        printQRCodeButton.Click += PrintQRCodeButton_Click;
        this.Controls.Add(printQRCodeButton);

        qrCodePictureBox = new PictureBox
        {
            Location = new Point(10, 190),
            Size = new Size(200, 200)
        };
        this.Controls.Add(qrCodePictureBox);
    }

    private void GenerateQRCodeButton_Click(object sender, EventArgs e)
    {
        string batchNumber = batchNumberTextBox.Text;
        string productDescription = productDescriptionTextBox.Text;
        string grade = gradeTextBox.Text;
        string width = widthTextBox.Text;
        string length = lengthTextBox.Text;

        string qrCodeValue = $"{batchNumber},{productDescription},{grade},{width},{length}";

        GenerateQRCode(qrCodeValue);

        printQRCodeButton.Enabled = true;
    }

    private void PrintQRCodeButton_Click(object sender, EventArgs e)
    {
        PrintQRCodeLabel();
    }

    private void GenerateQRCode(string qrCodeValue)
    {
        QRCodeGenerator qrGenerator = new QRCodeGenerator();
        QRCodeData qrCodeData = qrGenerator.CreateQrCode(qrCodeValue, QRCodeGenerator.ECCLevel.Q);
        QRCode qrCode = new QRCode(qrCodeData);
        Bitmap qrCodeImage = qrCode.GetGraphic(20);

        qrCodePictureBox.Image = qrCodeImage;
        qrCodePictureBox.SizeMode = PictureBoxSizeMode.StretchImage;

        qrCodeImage.Save("qrcode.png");
    }

    private void PrintQRCodeLabel()
    {
        Bitmap qrCodeImage = new Bitmap("qrcode.png");

        PrintDocument printDocument = new PrintDocument();
        printDocument.PrintPage += (sender, e) =>
        {
            e.Graphics.DrawImage(qrCodeImage, 0, 0);
        };

        printDocument.Print();
    }

    [STAThread]
    static void Main()
    {
        Application.EnableVisualStyles();
        Application.SetCompatibleTextRenderingDefault(false);
        Application.Run(new QRCodeForm());
    }
}